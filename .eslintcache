[{"C:\\Users\\luciv\\Documents\\invision\\src\\index.js":"1","C:\\Users\\luciv\\Documents\\invision\\src\\App.js":"2","C:\\Users\\luciv\\Documents\\invision\\src\\reportWebVitals.js":"3","C:\\Users\\luciv\\Documents\\invision\\src\\Components\\MajorCarousel.js":"4","C:\\Users\\luciv\\Documents\\invision\\src\\Components\\Login.js":"5","C:\\Users\\luciv\\Documents\\invision\\src\\Components\\SText.js":"6","C:\\Users\\luciv\\Documents\\invision\\src\\assets\\colors.js":"7","C:\\Users\\luciv\\Documents\\invision\\src\\Components\\SButton.js":"8","C:\\Users\\luciv\\Documents\\invision\\src\\Components\\SInputText.js":"9","C:\\Users\\luciv\\Documents\\invisionApp\\src\\index.js":"10","C:\\Users\\luciv\\Documents\\invisionApp\\src\\reportWebVitals.js":"11","C:\\Users\\luciv\\Documents\\invisionApp\\src\\App.js":"12","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\MajorCarousel.js":"13","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\Login.js":"14","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\SText.js":"15","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\SButton.js":"16","C:\\Users\\luciv\\Documents\\invisionApp\\src\\assets\\colors.js":"17","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\SInputText.js":"18","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\Icon.js":"19","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\Register.js":"20","C:\\Users\\luciv\\Documents\\invisionApp\\src\\assets\\strings-en.js":"21","C:\\Users\\luciv\\Documents\\invisionApp\\src\\assets\\dimensions.js":"22"},{"size":551,"mtime":1610029257251,"results":"23","hashOfConfig":"24"},{"size":714,"mtime":1610029501169,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1587,"mtime":1610033407496,"results":"27","hashOfConfig":"24"},{"size":4089,"mtime":1610033897422,"results":"28","hashOfConfig":"24"},{"size":870,"mtime":1610028549973,"results":"29","hashOfConfig":"24"},{"size":205,"mtime":1610028532712,"results":"30","hashOfConfig":"24"},{"size":973,"mtime":1610028549961,"results":"31","hashOfConfig":"24"},{"size":883,"mtime":1610028549970,"results":"32","hashOfConfig":"24"},{"size":551,"mtime":1610029257251,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":1338,"mtime":1610048584151,"results":"36","hashOfConfig":"34"},{"size":1498,"mtime":1610076179052,"results":"37","hashOfConfig":"34"},{"size":6137,"mtime":1610075697221,"results":"38","hashOfConfig":"34"},{"size":1070,"mtime":1610079119207,"results":"39","hashOfConfig":"34"},{"size":1354,"mtime":1610077000115,"results":"40","hashOfConfig":"34"},{"size":205,"mtime":1610028532712,"results":"41","hashOfConfig":"34"},{"size":1203,"mtime":1610077728428,"results":"42","hashOfConfig":"34"},{"size":304,"mtime":1610071683320,"results":"43","hashOfConfig":"34"},{"size":6519,"mtime":1610076468583,"results":"44","hashOfConfig":"34"},{"size":743,"mtime":1610074592530,"results":"45","hashOfConfig":"34"},{"size":1063,"mtime":1610079089403,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"19gjgdk",{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"11x0w22",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\luciv\\Documents\\invision\\src\\index.js",[],["103","104"],"C:\\Users\\luciv\\Documents\\invision\\src\\App.js",["105","106","107","108","109","110"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState } from 'react';\nimport MajorCarousel from './Components/MajorCarousel';\nimport styled from 'styled-components';\nimport { css } from 'styled-components';\nimport SLogin from \"./Components/Login\";\nimport Flex from '@react-css/flex';\nimport { createGlobalStyle } from \"styled-components\";\n\nfunction App() {\n\n    return(\n      <div>\n       <Flex row flex= '1 0'>\n          <Flex.Item flex='1 0' style={{margin: \"0em\"}}>\n            <MajorCarousel></MajorCarousel>\n          </Flex.Item>\n          <Flex.Item flex='1 0'>\n            <SLogin></SLogin>\n          </Flex.Item>\n       </Flex>\n       </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\luciv\\Documents\\invision\\src\\reportWebVitals.js",[],"C:\\Users\\luciv\\Documents\\invision\\src\\Components\\MajorCarousel.js",["111","112","113","114"],"C:\\Users\\luciv\\Documents\\invision\\src\\Components\\Login.js",[],"C:\\Users\\luciv\\Documents\\invision\\src\\Components\\SText.js",["115","116","117"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {colors} from \"../assets/colors\";\r\nimport Flex from '@react-css/flex';\r\n\r\nconst STitle = styled.div`\r\ncolor: ${colors.black};\r\nfont-size: 2rem;\r\nfont-family: \"MulishRegular\";\r\nmargin: 1rem;\r\npadding: 0.5rem 4rem;\r\n`;\r\n\r\nconst STitleLight = styled.div`\r\ncolor: ${colors.white};\r\nfont-size: 1rem;\r\nfont-family: \"MulishRegular\";\r\nmargin-top: 2rem;\r\npadding: 0rem 0rem;\r\n`;\r\n\r\nconst SSubtitle = styled(STitle)`\r\n    color: ${colors.primary};\r\n    font-size: 1rem;\r\n    font-family: \"MulishRegular\";\r\n    margin: 1rem;\r\n    padding: 0.5rem 4rem;\r\n`;\r\n\r\nconst SRegular = styled(STitle)`\r\n    color: ${colors.regularLight};\r\n    font-size: 0.7rem;\r\n    margin: 0rem;\r\n    padding: 0rem 0rem;\r\n    font-family: \"MulishRegular\";\r\n`;\r\n\r\nexport {STitle, STitleLight, SSubtitle, SRegular};\r\n","C:\\Users\\luciv\\Documents\\invision\\src\\assets\\colors.js",[],"C:\\Users\\luciv\\Documents\\invision\\src\\Components\\SButton.js",[],"C:\\Users\\luciv\\Documents\\invision\\src\\Components\\SInputText.js",["118","119"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {colors} from \"../assets/colors\";\r\n\r\nconst SInput = styled.input.attrs(props => ({\r\n  type: \"text\",\r\n  name: \"email\",\r\n  id: \"email\",\r\n  size: props.size || \"1em\",\r\n  error: props.error,\r\n  onChange: props.onChange,\r\n  input: props.input,\r\n  placeholder:\"Enter email\",\r\n  value: props.value,\r\n  valid: props.valid,\r\n}))`\r\n  width:  260px;\r\n  border: 0px solid white;\r\n  border-bottom: 1px solid ${props => props.valid ?  colors.primary : colors.error};\r\n  margin: ${props => props.size};\r\n  margin-left: 0px;\r\n  margin-top: 0px;\r\n  padding: ${props => props.size};\r\n  font-family: \"MulishRegular\";\r\n`;\r\n\r\nconst SPasswordInput = styled(SInput).attrs({\r\n  type: \"password\",\r\n  name: \"password\",\r\n  id: \"password\",\r\n  placeholder:\"Enter password\"\r\n})`\r\n\r\n`;\r\n\r\nexport {SInput, SPasswordInput};\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\index.js",[],["120","121"],"C:\\Users\\luciv\\Documents\\invisionApp\\src\\reportWebVitals.js",[],"C:\\Users\\luciv\\Documents\\invisionApp\\src\\App.js",["122","123","124","125","126","127","128"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState } from 'react';\nimport MajorCarousel from './Components/MajorCarousel';\nimport styled from 'styled-components';\nimport { css } from 'styled-components';\nimport SLogin from \"./Components/Login\";\nimport SRegister from \"./Components/Register\";\nimport Flex from '@react-css/flex';\nimport { createGlobalStyle } from \"styled-components\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nfunction App() {\n\n    return(\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" component={SignUp} />\n        </div>\n      </Router>\n    );\n}\n\nconst Home = () => (\n      <div>\n       <Flex row flex= '1 0'>\n          <Flex.Item flex='1 1' style={{margin: \"0em\"}}>\n            <MajorCarousel></MajorCarousel>\n          </Flex.Item>\n          <Flex.Item flex='1 1'>\n            <SLogin></SLogin>\n          </Flex.Item>\n       </Flex>\n       </div>\n);\n\nconst SignUp = () => (\n      <div>\n       <Flex row flex= '1 0'>\n         <Flex.Item flex='1 1' style={{margin: \"0em\"}}>\n           <MajorCarousel></MajorCarousel>\n         </Flex.Item>\n          <Flex.Item flex='1 1'>\n            <SRegister></SRegister>\n          </Flex.Item>\n       </Flex>\n       </div>\n);\n\n\nexport default App;\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\MajorCarousel.js",["129","130","131","132"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport {colors} from \"../assets/colors\";\r\nimport {strings} from \"../assets/strings-en\";\r\nimport {dimensions} from \"../assets/dimensions\";\r\nimport {STitleLight} from \"./SText\";\r\n\r\nclass MajorCarousel extends Component {\r\n    render() {\r\n        return (\r\n            <Carousel swipeable={true} showThumbs={false} infiniteLoop={true} autoPlay={true} showArrows={false}>\r\n                <div style={{background: colors.secondary, paddingBottom: dimensions.carouselPaddingBottom}}>\r\n                    <img src={process.env.PUBLIC_URL + '/img/component.png'}/>\r\n                    <STitleLight>{strings.txtLorem}</STitleLight>\r\n                </div>\r\n                <div style={{background: colors.secondary,   paddingBottom: dimensions.carouselPaddingBottom}}>\r\n                    <img src={process.env.PUBLIC_URL + '/img/component.png'} />\r\n                    <STitleLight>{strings.txtLorem}</STitleLight>\r\n                </div>\r\n                <div style={{background: colors.secondary,  paddingBottom: dimensions.carouselPaddingBottom}}>\r\n                    <img src={process.env.PUBLIC_URL + '/img/component.png'} />\r\n                    <STitleLight>{strings.txtLorem}</STitleLight>\r\n                </div>\r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MajorCarousel;\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\Login.js",["133","134","135"],"import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {SButton, GmailButton} from \"./SButton\";\r\nimport {SInput, SPasswordInput} from \"./SInputText\";\r\nimport {STitle, SSubtitle, SRegular, SError} from \"./SText\";\r\nimport {colors} from \"../assets/colors\";\r\nimport {strings} from \"../assets/strings-en\";\r\nimport {dimensions} from \"../assets/dimensions\";\r\nimport Flex from '@react-css/flex';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst responseGoogle = (response) => {\r\n  console.log(response);\r\n}\r\n\r\nconst Separator = styled.div`\r\ncolor: ${colors.white};\r\nborder-top: ${dimensions.separatorBorder} solid ${colors.regularLight};\r\nfont-size: ${dimensions.separatorFontSize} ;\r\nfont-family: ${dimensions.separatorFontSize} ;\r\nmargin: ${dimensions.separatorMargin};\r\nwidth: ${dimensions.separatorWidth};\r\nheight: ${dimensions.separatorHeight};\r\n`;\r\n\r\nclass Login extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.emailHandler = this.emailHandler.bind(this);\r\n\r\n    this.state = {\r\n      input: {email: {value : undefined }, password: {value : undefined }},\r\n      valid: true,\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    let input = this.state.input;\r\n    input[event.target.name]['value'] =  event.target.value;\r\n    input[event.target.name]['valid'] = this.emailHandler(input);\r\n\r\n    this.setState({input});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // alert('Uma dissertação foi enviada: ' + this.state.value);\r\n    // event.preventDefault();\r\n  }\r\n\r\n  emailHandler(input) {\r\n      var isValid = true;\r\n\r\n      // if ( input && !input[\"email\"]) {\r\n      //   isValid = false;\r\n      // }\r\n      if (input && input[\"email\"] && typeof input[\"email\"] !== \"undefined\") {\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(input[\"email\"]['value'])) {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      if (input && typeof input[\"password\"] !== \"undefined\" && input[\"password\"]['value'] == \"\") {\r\n          isValid = false;\r\n      }\r\n\r\n      return isValid;\r\n    }\r\n\r\n\r\n   render(){\r\n      return(\r\n         <Flex column alignItemsCenter >\r\n             <Flex.Item alignSelf= 'flex-end' flex='1 0'>\r\n             <STitle>{strings.lblTitle}</STitle>\r\n             </Flex.Item>\r\n             <Flex.Item flex='1 0'>\r\n             <SSubtitle>{strings.lblSubtitle}</SSubtitle>\r\n             </Flex.Item>\r\n             <Flex column alignItemsStart   style={{width: \"18em\", }}>\r\n             <SRegular>{strings.lblUsername}</SRegular>\r\n             <Flex.Item column=\"true\" flex='1 1'>\r\n               <SInput value={this.state.input['email']['value']} valid={this.state.input['email']['valid']} input={this.state.input} onChange={this.handleChange}></SInput>\r\n             </Flex.Item>\r\n             {\r\n               !this.state.input['email']['valid'] ? <Flex.Item flex= '1 1' alignSelf=\"flex-end\">\r\n              <SError>{strings.validationErrorEmail}</SError>\r\n             </Flex.Item> : null\r\n             }\r\n             <SRegular>{strings.lblPassword}</SRegular>\r\n             <Flex.Item flex='1 1'>\r\n             <SPasswordInput value={this.state.input['password']['value']} valid={this.state.input['password']['valid']} input={this.state.input} onChange={this.handleChange}></SPasswordInput>\r\n             </Flex.Item>\r\n             {\r\n               !this.state.input['password']['valid'] ? <Flex.Item flex= '1 1' alignSelf=\"flex-end\">\r\n              <SError>{strings.validationErrorPass}</SError>\r\n             </Flex.Item> : null\r\n             }\r\n            <Flex.Item flex= '1 1' alignSelf=\"flex-end\">\r\n             <SRegular>{strings.lblForgotPass}</SRegular>\r\n            </Flex.Item>\r\n             </Flex>\r\n             <Flex.Item flex='1 0'>\r\n               <SButton enabled={this.state.input['email']['valid'] && this.state.input['password']['valid']}>{strings.lblSignIn}</SButton>\r\n             </Flex.Item>\r\n             <Flex.Item flex='1 0'>\r\n              <Flex row>\r\n                  <Flex.Item  flex='1 0'>\r\n                    <Separator/>\r\n                  </Flex.Item>\r\n                  <Flex.Item flex='1 0'>\r\n                    <SRegular>{strings.lblOr}</SRegular>\r\n                  </Flex.Item>\r\n                  <Flex.Item flex='1 0'>\r\n                    <Separator/>\r\n                  </Flex.Item>\r\n              </Flex>\r\n             </Flex.Item>\r\n            <Flex.Item flex='1 0'>\r\n            <GoogleLogin\r\n                clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                render={renderProps => (\r\n                  <GmailButton icon={'GOOGLE_ICON'} onClick={renderProps.onClick} style={{margin: \"2em\"}}><SRegular>{strings.lblSignInWithGoogle}</SRegular></GmailButton>\r\n                )}\r\n                buttonText={strings.lblSignInWithGoogle}\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n                />\r\n            </Flex.Item>\r\n            <Flex.Item flex='1 0'>\r\n             <Flex row justifyContent = \"center\">\r\n                 <Flex.Item flex='1 0'>\r\n                   <SRegular>{strings.lblNew}</SRegular>\r\n                 </Flex.Item>\r\n                 <Flex.Item flex='2 0'>\r\n                   <SRegular>{strings.lblInvisionQuestion}</SRegular>\r\n                 </Flex.Item>\r\n                 <Flex.Item flex='3 0'>\r\n                 <Link to=\"/signup\"><SRegular>{strings.lblCreateAccount}</SRegular></Link>\r\n                 </Flex.Item>\r\n             </Flex>\r\n            </Flex.Item>\r\n         </Flex>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\SText.js",["136","137","138"],"C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\SButton.js",["139"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {colors} from \"../assets/colors\";\r\nimport {dimensions} from \"../assets/dimensions\";\r\nimport Icon from \"./Icon\";\r\nimport Flex from '@react-css/flex';\r\n\r\nclass GButton extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    render() {\r\n\r\n      const { icon } = this.props;\r\n\r\n        return(\r\n            <button enabled={this.props.enabled} className={ this.props.className } onClick={ this.props.onClick || this.click }>\r\n            <Flex row alignItemsCenter>\r\n                {icon && <Icon type={icon}/>}\r\n                { this.props.children }\r\n            </Flex>\r\n            </button>\r\n\r\n        );\r\n    }\r\n\r\n    click() {\r\n        alert(\"Sign In clicked\");\r\n    }\r\n\r\n}\r\n\r\nconst SButton = styled(GButton)`\r\n    background:  ${colors.primary} ;\r\n    border: ${dimensions.btnBorder} solid ${colors.primary};\r\n    border-radius: ${dimensions.btnRadius};\r\n    color: ${colors.white};\r\n    font-size: ${dimensions.btnfontSize};\r\n    margin: ${dimensions.btnMargin};\r\n    font-family: ${dimensions.fontFamily};\r\n    padding: ${dimensions.btnPadding};\r\n`;\r\n\r\nconst GmailButton = styled(SButton)`\r\n    background: ${colors.white};\r\n    color: ${colors.primary};\r\n    padding: ${dimensions.gbtnPadding} ;\r\n`;\r\n\r\nexport {SButton, GmailButton};\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\assets\\colors.js",[],"C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\SInputText.js",["140","141"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {colors} from \"../assets/colors\";\r\nimport {dimensions} from \"../assets/dimensions\";\r\n\r\nconst SInput = styled.input.attrs(props => ({\r\n  type: \"text\",\r\n  name: \"email\",\r\n  id: \"email\",\r\n  size: props.size || \"1em\",\r\n  error: props.error,\r\n  onChange: props.onChange,\r\n  input: props.input,\r\n  placeholder:\"Enter email\",\r\n  value: props.value,\r\n  valid: props.valid,\r\n}))`\r\n  width: ${dimensions.inptWidth} ;\r\n  border: ${dimensions.inptBorder} solid white;\r\n  border-bottom: ${dimensions.inptBorderBottom} solid ${props => props.valid ?  colors.primary : colors.error};\r\n  margin: ${props => props.size};\r\n  margin-left: ${dimensions.inptMarginLeft};\r\n  margin-top: ${dimensions.inptMarginTop};\r\n  padding: ${props => props.size};\r\n  font-family: ${dimensions.fontFamily};\r\n`;\r\n\r\nconst SPasswordInput = styled(SInput).attrs({\r\n  type: \"password\",\r\n  name: \"password\",\r\n  id: \"password\",\r\n  placeholder:\"Enter password\"\r\n})`\r\n`;\r\n\r\nconst STextInput = styled(SInput).attrs({\r\n  type: \"text\",\r\n  name: \"text\",\r\n  id: \"text\",\r\n  placeholder:\"Enter full name\"\r\n})`\r\n`;\r\n\r\nexport {STextInput, SInput, SPasswordInput};\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\Icon.js",["142","143"],"import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const iconTypes = {\r\n    googleIcon: 'GOOGLE_ICON',\r\n}\r\n\r\nexport default function Icon({ type }) {\r\n    return (\r\n         <div>\r\n            <img src={process.env.PUBLIC_URL + 'googlelogo.svg'} />\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\Components\\Register.js",["144","145","146","147"],"import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {SButton, GmailButton} from \"./SButton\";\r\nimport {STextInput, SInput, SPasswordInput} from \"./SInputText\";\r\nimport {STitle, SSubtitle, SRegular, SError} from \"./SText\";\r\nimport {colors} from \"../assets/colors\";\r\nimport {strings} from \"../assets/strings-en\";\r\nimport {dimensions} from \"../assets/dimensions\";\r\nimport Flex from '@react-css/flex';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst responseGoogle = (response) => {\r\n  console.log(response);\r\n}\r\n\r\nconst Separator = styled.div`\r\ncolor: ${colors.white};\r\nborder-top: ${dimensions.separatorBorder} solid ${colors.regularLight};\r\nfont-size: ${dimensions.separatorFontSize} ;\r\nfont-family: ${dimensions.separatorFontSize} ;\r\nmargin: ${dimensions.separatorMargin};\r\nwidth: ${dimensions.separatorWidth};\r\nheight: ${dimensions.separatorHeight};\r\n`;\r\n\r\nclass Register extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.emailHandler = this.emailHandler.bind(this);\r\n\r\n    this.state = {\r\n      input: {text: {value : undefined}, email: {value : undefined }, password: {value : undefined }},\r\n      valid: true,\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    let input = this.state.input;\r\n    input[event.target.name]['value'] =  event.target.value;\r\n    input[event.target.name]['valid'] = this.emailHandler(input);\r\n\r\n    this.setState({input});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // alert('Uma dissertação foi enviada: ' + this.state.value);\r\n    // event.preventDefault();\r\n  }\r\n\r\n  emailHandler(input) {\r\n      var isValid = true;\r\n\r\n      if (input && input[\"email\"] && typeof input[\"email\"] !== \"undefined\") {\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(input[\"email\"]['value'])) {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      if (input && typeof input[\"password\"] !== \"undefined\" && input[\"password\"]['value'] == \"\") {\r\n          isValid = false;\r\n      }\r\n\r\n      if (input && typeof input[\"text\"] !== \"undefined\" && input[\"text\"]['value'] == \"\") {\r\n          isValid = false;\r\n      }\r\n\r\n\r\n      return isValid;\r\n    }\r\n\r\n   render(){\r\n     return(\r\n        <Flex column alignItemsCenter >\r\n            <Flex.Item alignSelf= 'flex-end' flex='1 0'>\r\n            <STitle>{strings.lblTitle}</STitle>\r\n            </Flex.Item>\r\n            <Flex.Item flex='1 0'>\r\n            <SSubtitle>{strings.lblGettingStarted}</SSubtitle>\r\n            </Flex.Item>\r\n            <Flex column alignItemsStart   style={{width: \"18em\", }}>\r\n            <SRegular>{strings.lblFullName}</SRegular>\r\n            <Flex.Item column=\"true\" flex='1 1'>\r\n              <STextInput value={this.state.input['text']['value']} valid={this.state.input['text']['valid']} input={this.state.input} onChange={this.handleChange}></STextInput>\r\n            </Flex.Item>\r\n            {\r\n              !this.state.input['text']['valid'] ? <Flex.Item flex= '1 1' alignSelf=\"flex-end\">\r\n             <SError>{strings.validationErrorPass}</SError>\r\n            </Flex.Item> : null\r\n            }\r\n            <SRegular>Email</SRegular>\r\n            <Flex.Item column=\"true\" flex='1 1'>\r\n              <SInput value={this.state.input['email']['value']} valid={this.state.input['email']['valid']} input={this.state.input} onChange={this.handleChange}></SInput>\r\n            </Flex.Item>\r\n            {\r\n              !this.state.input['email']['valid'] ? <Flex.Item flex= '1 1' alignSelf=\"flex-end\">\r\n             <SError>{strings.validationErrorEmail}</SError>\r\n            </Flex.Item> : null\r\n            }\r\n            <SRegular>Password</SRegular>\r\n            <Flex.Item flex='1 1'>\r\n            <SPasswordInput value={this.state.input['password']['value']} valid={this.state.input['password']['valid']} input={this.state.input} onChange={this.handleChange}></SPasswordInput>\r\n            </Flex.Item>\r\n            {\r\n              !this.state.input['password']['valid'] ? <Flex.Item flex= '1 1' alignSelf=\"flex-end\">\r\n             <SError>{strings.validationErrorPass}</SError>\r\n            </Flex.Item> : null\r\n            }\r\n            </Flex>\r\n            <Flex.Item flex='1 0'>\r\n              <SButton enabled={this.state.input['email']['valid'] && this.state.input['password']['valid']}>{strings.lblSignUp}</SButton>\r\n            </Flex.Item>\r\n            <Flex.Item flex='1 0'>\r\n             <Flex row>\r\n                 <Flex.Item  flex='1 0'>\r\n                   <Separator/>\r\n                 </Flex.Item>\r\n                 <Flex.Item flex='1 0'>\r\n                   <SRegular>{strings.lblOr}</SRegular>\r\n                 </Flex.Item>\r\n                 <Flex.Item flex='1 0'>\r\n                   <Separator/>\r\n                 </Flex.Item>\r\n             </Flex>\r\n            </Flex.Item>\r\n           <Flex.Item flex='1 0'>\r\n           <GoogleLogin\r\n               clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n               render={renderProps => (\r\n                 <GmailButton icon={'GOOGLE_ICON'} onClick={renderProps.onClick} style={{margin: \"2em\"}}><SRegular>{strings.lblSignInWithGoogle}</SRegular></GmailButton>\r\n               )}\r\n               buttonText={strings.lblSignInWithGoogle}\r\n               onSuccess={responseGoogle}\r\n               onFailure={responseGoogle}\r\n               cookiePolicy={'single_host_origin'}\r\n               />\r\n           </Flex.Item>\r\n           <Flex.Item flex='1 0'>\r\n            <Flex row justifyContent = \"center\">\r\n                <Flex.Item flex='1 0'>\r\n                  <SRegular>{strings.lblAlreadyOn}</SRegular>\r\n                </Flex.Item>\r\n                <Flex.Item flex='2 0'>\r\n                  <SRegular>{strings.lblInvisionQuestion}</SRegular>\r\n                </Flex.Item>\r\n                <Flex.Item flex='3 0'>\r\n                <Link to=\"/\"><SRegular>{strings.lblSignIn}</SRegular></Link>\r\n                </Flex.Item>\r\n            </Flex>\r\n           </Flex.Item>\r\n        </Flex>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\luciv\\Documents\\invisionApp\\src\\assets\\strings-en.js",[],"C:\\Users\\luciv\\Documents\\invisionApp\\src\\assets\\dimensions.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":12},{"ruleId":"152","severity":1,"message":"156","line":3,"column":17,"nodeType":"154","messageId":"155","endLine":3,"endColumn":26},{"ruleId":"152","severity":1,"message":"157","line":3,"column":28,"nodeType":"154","messageId":"155","endLine":3,"endColumn":36},{"ruleId":"152","severity":1,"message":"158","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"152","severity":1,"message":"159","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":13},{"ruleId":"152","severity":1,"message":"160","line":9,"column":10,"nodeType":"154","messageId":"155","endLine":9,"endColumn":27},{"ruleId":"152","severity":1,"message":"161","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":13,"column":21,"nodeType":"164","endLine":13,"endColumn":79},{"ruleId":"162","severity":1,"message":"163","line":17,"column":21,"nodeType":"164","endLine":17,"endColumn":80},{"ruleId":"162","severity":1,"message":"163","line":21,"column":21,"nodeType":"164","endLine":21,"endColumn":80},{"ruleId":"152","severity":1,"message":"165","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"166","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":12},{"ruleId":"152","severity":1,"message":"165","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"148","replacedBy":"167"},{"ruleId":"150","replacedBy":"168"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":12},{"ruleId":"152","severity":1,"message":"156","line":3,"column":17,"nodeType":"154","messageId":"155","endLine":3,"endColumn":26},{"ruleId":"152","severity":1,"message":"157","line":3,"column":28,"nodeType":"154","messageId":"155","endLine":3,"endColumn":36},{"ruleId":"152","severity":1,"message":"158","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"152","severity":1,"message":"159","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":13},{"ruleId":"152","severity":1,"message":"160","line":10,"column":10,"nodeType":"154","messageId":"155","endLine":10,"endColumn":27},{"ruleId":"152","severity":1,"message":"169","line":11,"column":42,"nodeType":"154","messageId":"155","endLine":11,"endColumn":46},{"ruleId":"152","severity":1,"message":"161","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":15,"column":21,"nodeType":"164","endLine":15,"endColumn":79},{"ruleId":"162","severity":1,"message":"163","line":19,"column":21,"nodeType":"164","endLine":19,"endColumn":80},{"ruleId":"162","severity":1,"message":"163","line":23,"column":21,"nodeType":"164","endLine":23,"endColumn":80},{"ruleId":"152","severity":1,"message":"170","line":11,"column":27,"nodeType":"154","messageId":"155","endLine":11,"endColumn":33},{"ruleId":"152","severity":1,"message":"171","line":11,"column":35,"nodeType":"154","messageId":"155","endLine":11,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":68,"column":91,"nodeType":"174","messageId":"175","endLine":68,"endColumn":93},{"ruleId":"152","severity":1,"message":"165","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"166","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":10,"column":3,"nodeType":"178","messageId":"179","endLine":12,"endColumn":4},{"ruleId":"152","severity":1,"message":"165","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"158","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":11,"column":13,"nodeType":"164","endLine":11,"endColumn":68},{"ruleId":"152","severity":1,"message":"170","line":11,"column":27,"nodeType":"154","messageId":"155","endLine":11,"endColumn":33},{"ruleId":"152","severity":1,"message":"171","line":11,"column":35,"nodeType":"154","messageId":"155","endLine":11,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":66,"column":91,"nodeType":"174","messageId":"175","endLine":66,"endColumn":93},{"ruleId":"172","severity":1,"message":"173","line":70,"column":83,"nodeType":"174","messageId":"175","endLine":70,"endColumn":85},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'css' is defined but never used.","'createGlobalStyle' is defined but never used.","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'Flex' is defined but never used.",["180"],["181"],"'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]